# AIDEV-NOTE: Docker Compose for KOL platform development environment
version: '3.8'

services:
  # AIDEV-NOTE: FastAPI application service
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/kol_platform
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - kol-network

  # AIDEV-NOTE: PostgreSQL database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      - POSTGRES_DB=kol_platform
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-extensions.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d kol_platform"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - kol-network

  # AIDEV-NOTE: Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - kol-network

  # AIDEV-NOTE: Celery worker for background tasks
  worker:
    build: .
    command: ["python", "-m", "celery", "worker", "-A", "kol_api.tasks", "--loglevel=info"]
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres:password@postgres:5432/kol_platform
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - kol-network

  # AIDEV-NOTE: Celery Beat for scheduled tasks
  scheduler:
    build: .
    command: ["python", "-m", "celery", "beat", "-A", "kol_api.tasks", "--loglevel=info"]
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres:password@postgres:5432/kol_platform
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - kol-network

volumes:
  postgres_data:
  redis_data:

networks:
  kol-network:
    driver: bridge