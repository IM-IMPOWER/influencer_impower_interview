[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kol-platform-api"
dynamic = ["version"]
description = "FastAPI backend for KOL platform with GraphQL gateway and REST endpoints"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = ["fastapi", "graphql", "kol", "influencer", "campaign"]
authors = [
    { name = "KOL Platform Team" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    # FastAPI core
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "gunicorn>=21.2.0",
    
    # Database & ORM
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.7",
    
    # Vector search (pgvector)
    "pgvector>=0.2.0",
    
    # GraphQL
    "strawberry-graphql[fastapi]>=0.215.0",
    
    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    
    # Data validation
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # HTTP client
    "httpx>=0.25.0",
    "aiofiles>=23.2.1",
    
    # Caching
    "redis>=5.0.0",
    "hiredis>=2.2.3",
    
    # Background tasks
    "celery>=5.3.0",
    "kombu>=5.3.0",
    
    # Monitoring & Logging
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    
    # ML & AI
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "sentence-transformers>=2.2.0",
    
    # Utilities
    "python-slugify>=8.0.1",
    "python-dateutil>=2.8.2",
    "orjson>=3.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]

[project.urls]
Documentation = "https://github.com/kol-platform/api#readme"
Issues = "https://github.com/kol-platform/api/issues"
Source = "https://github.com/kol-platform/api"

[tool.hatch.version]
path = "src/kol_api/__about__.py"

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]

[tool.ruff]
target-version = "py311"
line-length = 120
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "ARG001",  # Unused function args in interface implementations
    "B027",    # Empty method in abstract base class
    "FBT001",  # Boolean positional arg in function definition
    "FBT002",  # Boolean default positional arg in function definition
    "S101",    # Use of assert
    "S104",    # Possible binding to all interfaces
]
unfixable = [
    "B",  # Don't touch unused variables
]

[tool.ruff.isort]
known-first-party = ["kol_api"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.black]
target-version = ["py311"]
line-length = 120
skip-string-normalization = true

[tool.coverage.run]
source_pkgs = ["kol_api", "tests"]
branch = true
parallel = true
omit = [
    "src/kol_api/__about__.py",
]

[tool.coverage.paths]
kol_api = ["src/kol_api", "*/kol-platform-api/src/kol_api"]
tests = ["tests", "*/kol-platform-api/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
follow_imports = "silent"
no_implicit_optional = true
no_implicit_reexport = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "kombu.*",
    "redis.*",
    "pgvector.*",
    "sentence_transformers.*",
]
ignore_missing_imports = true